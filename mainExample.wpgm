import wollok.game.*
import autos.*
import direcciones-regiones.*

//Muestra fin del juego cuando la resistencia del auto sea  0
object fin {
    var property position = game.center() 
    method text () = "Â¡Fin del Juego!"
    method textColor () = "FF0000FF"
    method decirFin() = game.addVisual(self)
}

object prueba {
    var autoPrincipal = null

    method inicializar(){
        //Agregamos al perosnaje principal
        const cachito = new Corsa(color=rojo, position=game.center())
        autoPrincipal = cachito
        game.addVisualCharacter(autoPrincipal)

        //Caracteriticas del juego
        game.title("Prueba corsa")
        game.width(15)
        game.height(15)

        //Eventos de teclado
        //Cambiar colores
        keyboard.r().onPressDo({ autoPrincipal.color(rojo) })
        keyboard.g().onPressDo({ autoPrincipal.color(verde) })
        keyboard.b().onPressDo({ autoPrincipal.color(azul) })
        

        //Movimientos
        keyboard.w().onPressDo({ autoPrincipal.moverse(norte) })
        keyboard.s().onPressDo({ autoPrincipal.moverse(sur) })
        keyboard.a().onPressDo({ autoPrincipal.moverse(este) })
        keyboard.d().onPressDo({ autoPrincipal.moverse(oeste) })
        keyboard.l().onPressDo({ autoPrincipal.repetirUltimoMovimiento() })

        //Creamos dos paredes en psociones random del mapa cada 3 segundos
        game.onTick(3000, "crear dos paredes", { => 
            const pared1 = new Pared()
            const pared2 = new Pared()
            game.addVisual(pared1) 
            game.addVisual(pared2)
        })

        //Si el auto choca con una pared, se baja la resistencia de la pared y el auto
        game.onCollideDo(autoPrincipal, {elem =>
            if (game.hasVisual(autoPrincipal)) {
                elem.bajarResistencia()
                autoPrincipal.bajarResistencia()
            }   
            //Si la resitencia es cero, pausamos la aparicion de paredes y 
            //removemos todos los visuales. Ademas agregamos el final del juego
            if (autoPrincipal.resistencia() == 0) {
                game.removeVisual(self)
                game.removeTickEvent("crear dos paredes")
                game.allVisuals().forEach({visual => game.removeVisual(visual)})
                fin.decirFin()
            }
        }
        )

        game.showAttributes(autoPrincipal)

        game.start()
    }
}

program ejemplo {
    prueba.inicializar()
}